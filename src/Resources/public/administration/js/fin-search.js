(this.webpackJsonp=this.webpackJsonp||[]).push([["fin-search"],{"1Cpp":function(e,n){e.exports='{% block findologic %}\n<sw-page class="findologic">\n    {% block findologic_header %}\n    <template slot="smart-bar-header">\n        <h2>\n            {{ $tc(\'findologic.header\') }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    {% block findologic_actions %}\n    <template slot="smart-bar-actions">\n        {% block findologic_actions_test %}\n        <sw-button\n                v-show="showTestButton"\n                @click="openSalesChannelUrl"\n                variant="contrast"\n        >\n            {{ $tc(\'findologic.settingForm.testButton\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block findologic_actions_save %}\n        <sw-button\n                class="sw-settings-login-registration__save-action"\n                :isLoading="isLoading"\n                :disabled="isLoading"\n                variant="primary"\n                :title="$tc(\'global.default.save\')"\n                :aria-label="$tc(\'global.default.save\')"\n                v-model="isSaveSuccessful"\n                @click="onSave"\n        >\n            {{ $tc(\'global.default.save\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block findologic_actions_cancel %}\n        <sw-button\n                :routerLink="{ name: \'sw.dashboard.index\' }"\n                :title="$tc(\'global.default.cancel\')"\n                :aria-label="$tc(\'global.default.cancel\')">\n            {{ $tc(\'global.default.cancel\') }}\n        </sw-button>\n        {% endblock %}\n    </template>\n    {% endblock %}\n\n    {% block findologic_content %}\n    <template slot="content">\n        {% block findologic_content_card %}\n        <sw-card-view>\n            {% block findologic_content_card_channel_config %}\n            <sw-sales-channel-config\n                    ref="configComponent"\n                    domain="FinSearch.config"\n                    v-model="config">\n                {% block findologic_content_card_channel_config_sales_channel %}\n                <template #select="{ onInput, selectedSalesChannelId, salesChannel }">\n                    {% block findologic_content_card_channel_config_sales_channel_card %}\n                    <sw-card title="Sales Channel">\n                        {% block findologic_content_card_channel_config_sales_channel_card_title %}\n                        <sw-single-select\n                                :options="salesChannel"\n                                v-model="selectedSalesChannelId"\n                                labelProperty="translated.name"\n                                valueProperty="id"\n                                @input="onInput">\n                        </sw-single-select>\n                        {% endblock %}\n                    </sw-card>\n                    {% endblock %}\n                </template>\n                {% endblock %}\n\n                {% block findologic_content_card_channel_config_cards %}\n                <template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n                    <div v-if="actualConfigData">\n                        {% block findologic_content_card_channel_config_credentials_card %}\n                        <findologic-config\n                                :actualConfigData="actualConfigData"\n                                :allConfigs="allConfigs"\n                                :shopkeyErrorState="shopkeyErrorState"\n                                :selectedSalesChannelId="selectedSalesChannelId"></findologic-config>\n                        {% endblock %}\n                    </div>\n                    <sw-loader v-if="!actualConfigData"></sw-loader>\n                </template>\n                {% endblock %}\n            </sw-sales-channel-config>\n            {% endblock %}\n\n            {% block findologic_content_card_loading %}\n            <sw-loader v-if="isLoading">\n            </sw-loader>\n            {% endblock %}\n        </sw-card-view>\n        {% endblock %}\n    </template>\n    {% endblock %}\n</sw-page>\n{% endblock %}\n'},"2ETB":function(e,n){e.exports='{% block findologic_content_card_channel_config_credentials %}\n    <sw-card class="sw-card--grid" :title="$tc(\'findologic.settingForm.config.title\')"\n    >\n        {% block findologic_content_card_channel_config_credentials_card_container %}\n            <sw-container>\n                {% block findologic_content_card_channel_config_credentials_card_container_settings %}\n                    <div class="findologic-settings-credentials-fields" v-if="actualConfigData">\n                        {% block findologic_content_card_channel_config_credentials_card_container_settings_shopkey %}\n                            <sw-inherit-wrapper\n                                    v-model="actualConfigData[\'FinSearch.config.shopkey\']"\n                                    :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'FinSearch.config.shopkey\']"\n                                    :customInheritationCheckFunction="checkTextFieldInheritance"\n                            >\n                                <template #content="props">\n                                    <sw-text-field\n                                            name="FinSearch.config.shopkey"\n                                            :mapInheritance="props"\n                                            :label="$tc(\'findologic.settingForm.config.shopkey.label\')"\n                                            :helpText="$tc(\'findologic.settingForm.config.shopkey.tooltipText\')"\n                                            :disabled="props.isInherited"\n                                            :required="true"\n                                            :error="shopkeyErrorState"\n                                            :value="props.currentValue"\n                                            @change="props.updateCurrentValue">\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block findologic_content_card_channel_config_credentials_card_container_settings_active %}\n                            <sw-inherit-wrapper\n                                    v-model="actualConfigData[\'FinSearch.config.active\']"\n                                    :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'FinSearch.config.active\']"\n                                    :customInheritationCheckFunction="checkBoolFieldInheritance"\n                            >\n                                <template #content="props">\n                                    <sw-switch-field\n                                            name="FinSearch.config.active"\n                                            :mapInheritance="props"\n                                            :label="$tc(\'findologic.settingForm.config.active.label\')"\n                                            :disabled="props.isInherited"\n                                            :value="props.currentValue"\n                                            @change="props.updateCurrentValue"\n                                    >\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block\n                            findologic_content_card_channel_config_credentials_card_container_settings_active_on_category_pages %}\n                            <sw-inherit-wrapper\n                                    v-model="actualConfigData[\'FinSearch.config.activeOnCategoryPages\']"\n                                    :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'FinSearch.config.activeOnCategoryPages\']"\n                                    :customInheritationCheckFunction="checkBoolFieldInheritance"\n                            >\n                                <template #content="props">\n                                    <sw-switch-field\n                                            name="FinSearch.config.activeOnCategoryPages"\n                                            :mapInheritance="props"\n                                            :label="$tc(\'findologic.settingForm.config.activeOnCategoryPages.label\')"\n                                            :disabled="props.isInherited"\n                                            :value="props.currentValue"\n                                            @change="props.updateCurrentValue"\n                                    >\n                                    </sw-switch-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block\n                            findologic_content_card_channel_config_credentials_card_container_settings_search_result_container %}\n                            <sw-inherit-wrapper\n                                    v-model="actualConfigData[\'FinSearch.config.searchResultContainer\']"\n                                    :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'FinSearch.config.searchResultContainer\']"\n                            >\n                                <template #content="props">\n                                    <sw-text-field\n                                            name="FinSearch.config.searchResultContainer"\n                                            :mapInheritance="props"\n                                            :label="$tc(\'findologic.settingForm.config.searchResultContainer.label\')"\n                                            :helpText="$tc(\'findologic.settingForm.config.searchResultContainer.tooltipText\')"\n                                            :disabled="props.isInherited"\n                                            :value="props.currentValue"\n                                            :placeholder="$tc(\'findologic.settingForm.config.searchResultContainer.placeholder\')"\n                                            @change="props.updateCurrentValue"\n                                    >\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block\n                            findologic_content_card_channel_config_credentials_card_container_settings_navigation_result_container %}\n                            <sw-inherit-wrapper\n                                    v-model="actualConfigData[\'FinSearch.config.navigationResultContainer\']"\n                                    :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'FinSearch.config.navigationResultContainer\']"\n                            >\n                                <template #content="props">\n                                    <sw-text-field\n                                            name="FinSearch.config.navigationResultContainer"\n                                            :mapInheritance="props"\n                                            :label="$tc(\'findologic.settingForm.config.navigationResultContainer.label\')"\n                                            :helpText="$tc(\'findologic.settingForm.config.navigationResultContainer.tooltipText\')"\n                                            :disabled="props.isInherited"\n                                            :value="props.currentValue"\n                                            :placeholder="$tc(\'findologic.settingForm.config.navigationResultContainer.placeholder\')"\n                                            @change="props.updateCurrentValue"\n                                    >\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n\n                        {% block\n                            findologic_content_card_channel_config_credentials_card_container_settings_integration_type %}\n                            <sw-inherit-wrapper\n                                    v-model="actualConfigData[\'FinSearch.config.integrationType\']"\n                                    :inheritedValue="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'FinSearch.config.integrationType\']"\n                            >\n                                <template #content="props">\n                                    <sw-text-field\n                                            name="FinSearch.config.integrationType"\n                                            :mapInheritance="props"\n                                            :label="$tc(\'findologic.settingForm.config.integrationType.label\')"\n                                            :helpText="$tc(\'findologic.settingForm.config.integrationType.tooltipText\')"\n                                            :disabled="true"\n                                            :value="props.currentValue"\n                                    >\n                                    </sw-text-field>\n                                </template>\n                            </sw-inherit-wrapper>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n            </sw-container>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},"7JrG":function(e,n,t){},Qoii:function(e,n,t){"use strict";t.r(n);var i=t("1Cpp"),o=t.n(i);t("ZMAt");const{Component:a,Mixin:l,Application:c,Utils:s}=Shopware,{Criteria:r}=Shopware.Data;a.register("findologic-page",{template:o.a,inject:["repositoryFactory"],mixins:[l.getByName("notification")],data:()=>({isLoading:!1,isSaveSuccessful:!1,isStagingShop:!1,isValidShopkey:!1,isActive:!1,shopkeyAvailable:!1,config:null,shopkeyErrorState:null,httpClient:c.getContainer("init").httpClient}),metaInfo(){return{title:this.$createTitle()}},watch:{config:{handler(){const e=this.$refs.configComponent.allConfigs.null;if(null===this.$refs.configComponent.selectedSalesChannelId?(this.shopkeyAvailable=!!this.config["FinSearch.config.shopkey"],this.isActive=!!this.config["FinSearch.config.active"]):(this.shopkeyAvailable=!!this.config["FinSearch.config.shopkey"]||!!e["FinSearch.config.shopkey"],this.isActive=!!this.config["FinSearch.config.active"]||!!e["FinSearch.config.active"]),this.shopkeyAvailable){let e=this._getValidShopkey();if(this._isShopkeyValid(e)){let n=s.format.md5(e).toUpperCase();this._isStagingRequest(n)}}},deep:!0}},computed:{salesChannelRepository(){return this.repositoryFactory.create("sales_channel")},showTestButton(){return this.isActive&&this.shopkeyAvailable&&this.isValidShopkey&&this.isStagingShop}},methods:{_isShopkeyValid(e){return this.isValidShopkey=!1!==/^[A-F0-9]{32}$/.test(e),this.isValidShopkey},_getValidShopkey(){const e=this.$refs.configComponent.allConfigs.null;let n=this.config["FinSearch.config.shopkey"];return!!n||(n=e["FinSearch.config.shopkey"]),n},_isStagingRequest(e){this.httpClient.get("https://cdn.findologic.com/static/"+e+"/config.json").then(e=>{e.data.isStagingShop&&(this.isStagingShop=!0)}).catch(e=>{this.isStagingShop=!1})},openSalesChannelUrl(){if(null!==this.$refs.configComponent.selectedSalesChannelId){const e=new r;e.addFilter(r.equals("id",this.$refs.configComponent.selectedSalesChannelId)),e.setLimit(1),e.addAssociation("domains"),this.salesChannelRepository.search(e,Shopware.Context.api).then(e=>{let n=e.first().domains.first();this._openStagingUrl(n)})}else this._openDefaultUrl()},onSave(){this._setErrorStates(),this.shopkeyAvailable&&this.isValidShopkey&&this._save()},_save(){this.isLoading=!0,this.$refs.configComponent.save().then(e=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.createNotificationSuccess({title:this.$tc("findologic.settingForm.titleSuccess"),message:this.$tc("findologic.settingForm.configSaved")}),e&&(this.config=e)}).catch(()=>{this.isLoading=!1})},_setErrorStates(){this.shopkeyAvailable?this.isValidShopkey?this.shopkeyErrorState=null:(this.createNotificationError({title:this.$tc("findologic.settingForm.titleError"),message:this.$tc("findologic.invalidShopkey")}),this.shopkeyErrorState={code:1,detail:this.$tc("findologic.invalidShopkey")}):(this.createNotificationError({title:this.$tc("findologic.settingForm.titleError"),message:this.$tc("findologic.fieldRequired")}),this.shopkeyErrorState={code:1,detail:this.$tc("findologic.fieldRequired")})},_openDefaultUrl(){let e=window.location.origin+"?findologic=on";window.open(e,"_blank")},_openStagingUrl(e){if(e){let n=e.url+"?findologic=on";window.open(n,"_blank")}else this._openDefaultUrl()}}});var d=t("2ETB"),g=t.n(d);const{Component:h}=Shopware;h.register("findologic-config",{template:g.a,name:"FindologicConfig",props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},shopkeyErrorState:{required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},methods:{checkTextFieldInheritance:e=>"string"!=typeof e||e.length<=0,checkBoolFieldInheritance:e=>"boolean"!=typeof e}});var p=t("s3Ly"),f=t("zaPX");const{Module:u}=Shopware;u.register("findologic-module",{type:"plugin",name:"FinSearch",title:"findologic.header",description:"findologic.general.mainMenuDescription",color:"#f7ff0f",icon:"small-search",snippets:{"de-DE":f,"en-GB":p},routes:{index:{components:{default:"findologic-page"},path:"index"}},navigation:[{id:"findologic-module",label:"findologic.header",color:"#f7ff0f",path:"findologic.module.index",icon:"small-search",position:100}]})},ZMAt:function(e,n,t){var i=t("7JrG");"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,t("SZ7m").default)("7841029e",i,!0,{})},s3Ly:function(e){e.exports=JSON.parse('{"findologic":{"header":"FINDOLOGIC","general":{"mainMenuDescription":"FINDOLOGIC plugin for Shopware 6 e-commerce system"},"fieldRequired":"Shopkey is required","invalidShopkey":"Invalid Shopkey","settingForm":{"configSaved":"Configuration saved","testButton":"FINDOLOGIC Test","config":{"title":"Configuration","shopkey":{"label":"Shopkey","tooltipText":"FINDOLOGIC shopkey"},"active":{"label":"Active","tooltipText":"Activate the FINDOLOGIC search provider."},"activeOnCategoryPages":{"label":"Active on category pages","tooltipText":"Activate the FINDOLOGIC search provider for category pages."},"searchResultContainer":{"label":"CSS class for main container","placeholder":"e.g fl-result","tooltipText":"To ensure proper functionality, the FINDOLOGIC Direct Integration must have access to the main container of the shop."},"navigationResultContainer":{"label":"CSS class for main container","placeholder":"e.g fl-navigation","tooltipText":"To ensure proper functionality, the FINDOLOGIC Direct Integration must have access to the main container of the shop."},"integrationType":{"label":"Integration (read-only)","tooltipText":"Currently used integration type. Either one of Direct Integration or API."}},"titleSuccess":"Success","titleError":"Error"},"error":{"title":"Error"}}}')},zaPX:function(e){e.exports=JSON.parse('{"findologic":{"header":"FINDOLOGIC","general":{"mainMenuDescription":"FINDOLOGIC Plugin für das Shopware 6 E-Commerce System"},"fieldRequired":"Shopkey ist erforderlich","invalidShopkey":"Ungültiger Shopkey","settingForm":{"configSaved":"Konfiguration gespeichert","testButton":"FINDOLOGIC Test","config":{"title":"Konfiguration","shopkey":{"label":"Shopkey","tooltipText":"FINDOLOGIC shopkey"},"active":{"label":"Aktiv","tooltipText":"Aktiviert die FINDOLOGIC Suche."},"activeOnCategoryPages":{"label":"Aktiv auf Kategorieseiten","tooltipText":"Aktiviert die FINDOLOGIC Suche für Kategorieseiten."},"searchResultContainer":{"label":"CSS-Klasse für Hauptcontainer","placeholder":"z.B. \'fl-result\'","tooltipText":"Damit die Direct Integration einwandfrei funktioniert, muss sie Zugriff auf den Hauptcontainer des Shops haben."},"navigationResultContainer":{"label":"CSS-Klasse für Hauptcontainer","placeholder":"z.B. \'fl-navigation-result\'","tooltipText":"Damit die Direct Integration einwandfrei funktioniert, muss sie Zugriff auf den Hauptcontainer des Shops haben."},"integrationType":{"label":"Integration (schreibgeschützt)","tooltipText":"Die aktuell verwendete Integrationsart. Entweder Direct Integration oder API."}},"titleSuccess":"Erfolgreich","titleError":"Fehler"},"error":{"title":"Fehler"}}}')}},[["Qoii","runtime","vendors-node"]]]);