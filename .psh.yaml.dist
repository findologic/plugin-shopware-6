header: |
  SHOPWARE Developer Version

         _
        | |
     ___| |__   ___  _ ____      ____ _ _ __ ___
    / __| '_ \ / _ \| '_ \ \ /\ / / _` | '__/ _ \
    \__ \ | | | (_) | |_) \ V  V / (_| | | |  __/
    |___/_| |_|\___/| .__/ \_/\_/ \__,_|_|  \___|
                    | |
                    |_|

templates:
  - source: ".env.dist"
    destination: ".env"

paths:
  - dev-ops/common/actions

const:
  DB_USER: "root"
  DB_PASSWORD: ""
  DB_HOST: "127.0.0.1"
  DB_PORT: "3306"
  DB_NAME: "shopware"
  APP_URL: "http://localhost:8000"
  APP_ENV: "dev"
  APP_MAILER_URL: "smtp://mailhog:1025"
  APP_WATCH: "false"
  SSH_PRIVATE_KEY_PATH: ""
  ESLINT_DISABLE: "true"
  CYPRESS_HEADLESS: "true"
  CYPRESS_ENV: "Administration"
  CYPRESS_PARAMS: ""
  CYPRESS_LOCAL: false
  CHROME_BIN: ""
  E2E_RESTORE_DUMP_PATH: /tmp/shopware_e2e_dump.sql.gz
  SHOPWARE_SES_HOSTS: "elasticsearch:9200"
  SHOPWARE_SES_ENABLED: "0"
  SHOPWARE_SES_INDEXING_ENABLED: "0"
  SHOPWARE_SES_INDEX_PREFIX: "sw"
  FEATURES: |
    FEATURE_NEXT_516=1
  DEVPORT: "8080"

dynamic:
  USERKEY: echo "$(id -u):$(id -g)"
  APP_ID: docker-compose ps -q app_server
  MYSQL_ID: docker-compose ps -q app_mysql
  CYPRESS_ID: docker-compose ps -q app_cypress
  USER_ID: id -u
  GROUP_ID: id -g
  E2E_ENV: if [ -z "$(grep docker /proc/self/cgroup)" ]; then echo "default"; else echo "docker"; fi
  PROJECT_ROOT: echo `pwd`
  COMPOSER_HOME: echo ${COMPOSER_HOME:-"$HOME/.composer"}

environments:
  docker:
    paths:
      - "dev-ops/docker/actions"
    templates:
      - source: ".env.dist"
        destination: ".env"
      - source: "dev-ops/docker/docker-compose.override.yml"
        destination: "./docker-compose.override.yml"

  bamboo:
    paths:
      - "dev-ops/common/actions"
      - "dev-ops/bamboo.shopware.com/actions"
    const:
      APP_ENV: prod
      APP_URL: "http://docker.vm:8000"
    templates:
      - source: ".env.dist"
        destination: ".env"
      - source: "dev-ops/bamboo.shopware.com/docker-compose.override.yml"
        destination: "./docker-compose.override.yml"

  administration:
    dynamic:
      HOST: if [ -z "$(grep docker /proc/self/cgroup)" ]; then echo "localhost"; else echo "0.0.0.0"; fi
    paths:
      - "dev-ops/administration/actions"

  e2e:
    const:
      DB_NAME: "shopware_e2e"
      APP_ENV: prod
    paths:
      - "dev-ops/e2e/actions"
    templates:
      - source: ".env.dist"
        destination: ".env"
      - source: "dev-ops/docker/docker-compose.override.yml"
        destination: "./docker-compose.override.yml"

  storefront:
    paths:
      - "dev-ops/storefront/actions"

  docs:
    const:
        DOCS_DIR: "./vendor/shopware/platform/src/Docs"
    paths:
      - "dev-ops/docs/actions"

  analyze:
    const:
        PLATFORM_DIR: "./vendor/shopware/platform"
    templates:
      - source: "./dev-ops/analyze/template/depfile.domain.core.deep.yml"
        destination: "./dev-ops/analyze/tmp/depfiles/depfile.domain.core.deep.yml"

      - source: "./dev-ops/analyze/template/depfile.domain.core.framework.dal.yml"
        destination: "./dev-ops/analyze/tmp/depfiles/depfile.domain.core.framework.dal.yml"

      - source: "./dev-ops/analyze/template/depfile.domain.platform.yml"
        destination: "./dev-ops/analyze/tmp/depfiles/depfile.domain.platform.yml"

      - source: "./dev-ops/analyze/template/depfile.technical.repositories.yml"
        destination: "./dev-ops/analyze/tmp/depfiles/depfile.technical.repositories.yml"

      - source: "./dev-ops/analyze/template/depfile.yml"
        destination: "./dev-ops/analyze/tmp/depfiles/depfile.yml"
    paths:
      - "dev-ops/analyze/actions"
